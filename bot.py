from aiogram import Bot, Dispatcher, executor, types
from dotenv import load_dotenv
import os
import random
from threading import Thread
from flask import Flask

# –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–∫–µ–Ω–∞
load_dotenv()
TOKEN = os.getenv("TOKEN")

bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

# –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
@dp.message_handler(commands=["start"])
async def start(message: types.Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! üåø –Ø —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–π –±–æ—Ç.\n"
        "–•–æ—á–µ—à—å —Ü–∏—Ç–∞—Ç—É –º—É–¥—Ä–µ—Ü–∞? –ù–∞–ø–∏—à–∏ /quote"
    )

@dp.message_handler(commands=["quote"])
async def send_quote(message: types.Message):
    quotes = [
        "–ü–æ–∑–Ω–∞–π —Å–∞–º–æ–≥–æ —Å–µ–±—è. ‚Äî –°–æ–∫—Ä–∞—Ç",
        "–ú—ã—Å–ª–∏—Ç—å ‚Äî –∑–Ω–∞—á–∏—Ç —Å–ø–æ—Ä–∏—Ç—å —Å —Å–æ–±–æ–π. ‚Äî –ê—Ä–∏—Å—Ç–æ—Ç–µ–ª—å",
        "–ú—É–¥—Ä—ã–π —á–µ–ª–æ–≤–µ–∫ –Ω–µ –≥–æ–≤–æ—Ä–∏—Ç –≤—Å—ë, —á—Ç–æ –¥—É–º–∞–µ—Ç. ‚Äî –°–µ–Ω–µ–∫–∞",
        "–°—É–¥—å–±–∞ –ø—Ä–∞–≤–∏—Ç –º–∏—Ä–æ–º, –Ω–æ –Ω–µ –Ω–∞—à–∏–º–∏ –ø–æ—Å—Ç—É–ø–∫–∞–º–∏. ‚Äî –ú–æ–Ω—Ç–µ–Ω—å",
        "–í—Å—ë —Ç–µ—á—ë—Ç, –≤—Å—ë –º–µ–Ω—è–µ—Ç—Å—è. ‚Äî –ì–µ—Ä–∞–∫–ª–∏—Ç",
    ]
    await message.answer(random.choice(quotes))

# –§–∏–∫—Ç–∏–≤–Ω—ã–π –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –¥–ª—è Render Free
app = Flask("")

@app.route("/")
def index():
    return "Bot is running!"

@app.route("/healthz")
def health():
    return "OK"

def run_flask():
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 10000)))

# –ó–∞–ø—É—Å–∫ Flask –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
Thread(target=run_flask).start()

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —á–µ—Ä–µ–∑ long polling
if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
